name: GitHub Actions Demo
run-name: ${{ github.actor }} is testing out GitHub Actions üöÄ

on: [ push ]

jobs:
  test-front:
    name: Run front test job
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: front

    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install Chrome
        run: |
          sudo apt-get install -y wget gnupg2
          wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
          sudo sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google-chrome.list'
          sudo apt-get update
          sudo apt-get install -y google-chrome-stable

      - name: Install dependencies
        working-directory: front
        run: npm ci

      - name: Run tests
        run: npm run test -- --watch=false --browsers=ChromeHeadless --code-coverage

      - name: Archive coverage report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report-frontend
          path: front/coverage/

      - run: echo "üçè This job's status is ${{ job.status }}."

  test-back:
    name: Run back test job
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: back

    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Build and test with Maven
        working-directory: back
        run: mvn clean test

      - name: Test Report
        uses: phoenix-actions/test-reporting@v8
        id: test-report               # Set ID reference for step
        if: always()    # run this step even if previous step failed
        with:
            name: JEST Tests            # Name of the check run which will be created
            path: reports/jest-*.xml    # Path to test results
            reporter: jest-junit        # Format of test results

      - name: Read output variables
        run: |
          echo "url is ${{ steps.test-report.outputs.runHtmlUrl }}"

      - run: echo "üçè This job's status is ${{ job.status }}."