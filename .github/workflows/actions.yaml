name: Testing GitHub Actions
run-name: ${{ github.actor }} is testing 🚀

on: [ pull_request ]

jobs:
  test-front:
    name: Run front test job
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: front

    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install Chrome
        run: |
          sudo apt-get install -y wget gnupg2
          wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
          sudo sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google-chrome.list'
          sudo apt-get update
          sudo apt-get install -y google-chrome-stable

      - name: Install dependencies
        working-directory: front
        run: |
          npm ci
          npm install --save-dev karma-junit-reporter

      - name: Run tests
        run: npm run test -- --watch=false --browsers=ChromeHeadless --code-coverage --reporters=junit

      - name: Archive coverage report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report-frontend
          path: front/coverage/bobapp/

      - name: Test Report
        uses: phoenix-actions/test-reporting@v8
        id: front-test-report
        if: always()
        with:
          name: Angular Tests
          path: front/reports/karma-test-results.xml
          reporter: java-junit

      - name: Show report URL
        run: |
          echo "front url is ${{ steps.front-test-report.outputs.runHtmlUrl }}"
          echo "🍏 This job's status is ${{ job.status }}."

  test-back:
    name: Run back test job
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: back

    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Build and test with Maven
        working-directory: back
        run: mvn clean test

      - name: Test Report
        uses: phoenix-actions/test-reporting@v8
        id: back-test-report
        if: always()
        with:
          name: Java Tests
          path: back/target/surefire-reports/*.xml
          reporter: java-junit

      - name: Archive back coverage report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report-backend
          path: back/target/site/jacoco/


      - name: Read output variables
        run: |
          echo "back url is ${{ steps.back-test-report.outputs.runHtmlUrl }}"
          echo "🍏 This job's status is ${{ job.status }}."


  sonarqube:
    name: SonarQube
    runs-on: ubuntu-latest
    needs: [test-front, test-back]

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download front coverage report
        uses: actions/download-artifact@v4
        with:
          name: coverage-report-frontend
          path: front/coverage/

      - name: Download back coverage report
        uses: actions/download-artifact@v4
        with:
          name: coverage-report-backend
          path: back/target/site/jacoco/

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Build backend
        run: |
          cd back
          mvn clean compile

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.branch.name=${{ github.head_ref }}


  docker-front:
    runs-on: ubuntu-latest
    needs:
      - sonarqube
      - test-front
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and push front
        uses: docker/build-push-action@v6
        with:
          context: "{{defaultContext}}:front"
          push: true
          tags: baudrey/front:${{ github.sha }}
  docker-back:
    needs:
      - sonarqube
      - test-back
    runs-on: ubuntu-latest
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and push front
        uses: docker/build-push-action@v6
        with:
          context: "{{defaultContext}}:back"
          push: true
          tags: baudrey/back:${{ github.sha }}